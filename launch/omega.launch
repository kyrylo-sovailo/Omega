<?xml version="1.0"?>

<arg name="paused" default="True" />
<arg name="gui" default="True" />

<launch>
  <!-- start Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="physics" value="ode" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="True" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="headless" value="False" />
    <arg name="debug" value="False" />
  </include>

  <group ns="/gazebo/$(arg robot_name)">
    <!-- load Gazebo controllers -->
    <group ns="joints">
      <!-- HACK: Load the URDF into the ROS Parameter Server at gazebo controller namespace due to a bug in controller spawner -->
      <include file="$(find tuda_turtlebot3_description)/launch/load_tuda_turtlebot3_robot_description.launch" if="$(arg with_base)">
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="with_arm" value="$(arg with_arm)" />
        <arg name="ground_truth" value="$(arg ground_truth)" />
        <arg name="use_diff_drive" value="$(arg use_diff_drive)" />
      </include>
      <include file="$(find tuda_turtlebot3_arm_description)/launch/load_tuda_turtlebot3_arm_robot_description.launch" unless="$(arg with_base)">
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="parent_link" value="world" />
        <arg name="load_gazebo_ros_control" value="True" />
      </include>

      <!-- start Gazebo joint state publisher -->
      <include file="$(find tuda_turtlebot3_gazebo)/launch/start_joint_state_controller.launch">
        <arg name="publish_rate" value="1000" if="$(eval arg('arm_controller_type') == 'effort')" />
        <arg name="publish_rate" value="50"   unless="$(eval arg('arm_controller_type') == 'effort')" />
      </include>

      <!-- start the Gazebo velocity controllers for the wheels -->
      <group if="$(arg with_base)" >
        <include file="$(find tuda_turtlebot3_gazebo)/launch/start_wheel_controllers.launch" unless="$(arg use_diff_drive)" />
      </group>

      <!-- start the Gazebo position controllers for the manipulator arm -->
      <include file="$(find tuda_turtlebot3_gazebo)/launch/start_arm_controllers.launch" if="$(arg with_arm)">
        <arg name="arm_controller_type" value="$(arg arm_controller_type)" />
        <arg name="gripper_controller_type" value="$(arg gripper_controller_type)" />
      </include>
    </group>

    <!-- forward joint states from gazebo -->
    <node pkg="topic_tools" type="relay" name="joint_states_relay" args="/gazebo/$(arg robot_name)/joints/joint_states /$(arg robot_name)/joints/joint_states" ns="joints" />

    <!-- robot base related stuff -->
    <group if="$(arg with_base)" >
      <!-- bypass wheels topics -->
      <node pkg="topic_tools" type="relay" name="wheel_left_cmd_relay" args="/$(arg robot_name)/joints/wheel_left_controller/command /gazebo/$(arg robot_name)/joints/wheel_left_controller/command" ns="joints" />
      <node pkg="topic_tools" type="relay" name="wheel_left_status_relay" args="/gazebo/$(arg robot_name)/joints/wheel_left_controller/state /$(arg robot_name)/joints/wheel_left_controller/state" ns="joints" />
      <node pkg="topic_tools" type="relay" name="wheel_right_cmd_relay" args="/$(arg robot_name)/joints/wheel_right_controller/command /gazebo/$(arg robot_name)/joints/wheel_right_controller/command" ns="joints" />
      <node pkg="topic_tools" type="relay" name="wheel_right_status_relay" args="/gazebo/$(arg robot_name)/joints/wheel_right_controller/state /$(arg robot_name)/joints/wheel_right_controller/state" ns="joints" />

      <node pkg="tf" type="static_transform_publisher" name="lidar_to_base" args="0 0 0 0 0 0 base_scan turtlebot3/sensor/base_scan 100" />
      <node pkg="tf" type="static_transform_publisher" name="cam_to_base" args=" 0 0 0 0 0 0 camera_optical_frame turtlebot3/camera_optical_frame 100" />

      <!-- logitech c930e publisher -->
      <include file="$(find tuda_turtlebot3_gazebo)/launch/start_logitech_publisher.launch">
        <arg name="robot_name" value="$(arg robot_name)" />
      </include>

      <!-- forward ground truth odom pose from Gazebo -->
      <group if="$(arg ground_truth)" >
        <group unless="$(arg use_diff_drive)" >
          <node name="odom_relay" pkg="topic_tools" type="relay" args="/gazebo/$(arg robot_name)/odom /$(arg robot_name)/odom" />
          <node name="world_odom_static_tf_publisher" pkg="tf2_ros" type="static_transform_publisher" args="-1 0 0 1.57 0 0 world odom" />
        </group>
      </group>
    </group>
  </group>

  <group ns="$(arg robot_name)">
    <!-- robot spawner -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name) -param robot_description
                                                                      -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)
                                                                      -R $(arg roll)  -P $(arg pitch) -Y $(arg yaw)" />
  </group>
</launch>
